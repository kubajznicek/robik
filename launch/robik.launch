<!-- Robik launch file to start up robot -->

<launch>

	<arg name="robot_connected" value="$(env CONNECTED)" />
	<arg name="ros_workspace" value="/home/honza/workspace" />
	<arg name="debug" default="false" />
	<arg name="rgbd" default="false" />
	<arg name="moveit" default="true" />
	<arg name="db" default="false" />
	<param name="robot_description" command="$(find xacro)/xacro --inorder $(find robik)/model/v3/robik.urdf.xacro" />

	<node name="wiimote" pkg="wiimote" type="wiimote_node.py" respawn="false" />

	<node name="robik_driver" pkg="robik" type="robik_driver" output="screen" />
	<node name="robik_teleop" pkg="robik" type="robik_teleop" output="screen" />
	<node name="robik_hw_ifce" pkg="robik" type="robik_hw_ifce" output="screen" />

	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" />

	<!-- Start joint trajectory action controller -->
	<rosparam command="load" file="$(find robik)/launch/robik_controllers_config/joint_trajectory_controllers.yaml" />
	<rosparam command="load" file="$(find robik)/launch/robik_controllers_config/joint_state_controller.yaml" />
	<rosparam command="load" file="$(find robik)/launch/robik_controllers_config/mobile_base_controller.yaml" />
	<rosparam command="load" file="$(find robik)/launch/robik_sensors_config/imu_sensor_controller.yaml" />
	<node name="controller_spawner" pkg="controller_manager" type="spawner" output="screen" args="--shutdown-timeout=2 arm_controller gripper_controller joint_state_controller mobile_base_controller imu_sensor_controller" />


	<group if="$(arg robot_connected)">

		<node pkg="xv_11_laser_driver" type="neato_laser_publisher" name="neato_laser_publisher">
		  <param name="~port" value="/dev/ttyUSB0" />
		  <param name="~frame_id" value="/base_scan_link" />
		  <param name="~firmware_version" value="2" />
		  <remap from="scan" to="/base_scan/scan" />
		</node>

		<node name="rosserial_node" pkg="rosserial_server" type="serial_node">
		  <rosparam>
                    port: /dev/ttyACM0
                    baud: 500000
                  </rosparam>
		</node>

		<node pkg="rosserial_python" type="message_info_service.py" name="rosserial_message_info" />
	</group>

	<!-- Simulation -->
	<group unless="$(arg robot_connected)">
		<node name="rosserial_node" pkg="robik" type="arduino_dummy.py" />

		<!-- This node is to enable map link to emaulate world coordinate while SLAM is disabled -->
		<node pkg="tf" type="static_transform_publisher" name="map_to_base_broadcaster" args="0 0 0 0 0 0 map base_link 20" />

		<!-- joints of arm is published by driver -->
		<param name="use_gui" value="true" />
		<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
		

		<param name="use_sim_time" value="true" />
		<node name="bagplayer" pkg="rosbag" type="play" output="screen" args="--clock -l $(arg ros_workspace)/src/robik/bags/nav.bag">
		</node>
	</group>

	<group if="$(arg robot_connected)">
		<group if="$(arg rgbd)">
			<include file="$(find openni_launch)/launch/openni.launch" />
			<!--<include file="$(find robik)/launch/robik_slam.launch" />-->
		</group>
	</group>

	<!-- Run the main MoveIt executable -->
	<group if="$(arg moveit)">
		<include file="$(find robik_moveit_config)/launch/move_group.launch">
			<arg name="allow_trajectory_execution" value="true"/>
			<arg name="fake_execution" value="false"/>
			<arg name="info" value="$(arg debug)"/>
			<arg name="debug" value="$(arg debug)"/>
		</include>

		<include file="$(find robik_moveit_config)/launch/default_warehouse_db.launch" if="$(arg db)"/>
	</group>

	<node name="sound_play" pkg="sound_play" type="soundplay_node.py" respawn="true" />

	<node name="robik_ai" pkg="robik" type="robik_ai.py" />

</launch>
